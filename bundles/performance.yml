version: '3.7'
services:
  web:
    image: nginx:1.20-alpine
    hostname: web
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ${MAGENTO_PATH}/magento-docker/etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${MAGENTO_PATH}/magento-docker/etc/nginx/server.crt:/etc/nginx/server.crt
      - ${MAGENTO_PATH}/magento-docker/etc/nginx/server.key:/etc/nginx/server.key
      - ${MAGENTO_PATH}/magento-docker/etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "${WEB_PORT}:80"
      - "${WEBS_PORT}:443"
    depends_on:
      - app
    #    command: nginx-debug -g 'daemon off;'
    x-hint: uncomment the line above and change error_log in nginx.conf
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/nginx.html
  db:
    image: mariadb:10.4
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    shm_size: '1gb'
    volumes:
      - ${MAGENTO_PATH}/magento-docker/etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "${DB_PORT}:3306"
    x-hits:
      - bin/magento dev:query-log:enable and watch var/debug/db.log
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/mysql.html
  app:
    image: duhon/php:7.3-fpm
    hostname: app
    ports:
      - "${SSH_PORT}:22"
    stop_signal: SIGKILL
    volumes:
      - ${MAGENTO_PATH}:/var/www:${FILE_SYNC}
      - ${MAGENTO_PATH}/magento-docker/etc/php/tools:/usr/local/bin/magento2:ro
#      - ${MAGENTO_PATH}/magento-docker/etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#      - ${MAGENTO_PATH}/magento-docker/etc/php/blackfire.ini:/usr/local/etc/php/conf.d/blackfire.ini
#      - ${MAGENTO_PATH}/magento-docker/etc/php/tideways.ini:/usr/local/etc/php/conf.d/tideways.ini
#      - ${MAGENTO_PATH}/magento-docker/etc/php/xhprof.ini:/usr/local/etc/php/conf.d/xhprof.ini
#      - ${MAGENTO_PATH}/magento-docker/etc/php/tideways_xhprof.ini:/usr/local/etc/php/conf.d/tideways_xhprof.ini
      - ${MAGENTO_PATH}/magento-docker/etc/php/spx.ini:/usr/local/etc/php/conf.d/spx.ini
#      - ${MAGENTO_PATH}/magento-docker/etc/php/profiler.php:/usr/local/lib/php/header.php
#      - ${MAGENTO_PATH}/magento-docker/etc/php/append.ini:/usr/local/etc/php/conf.d/append.ini
      - ${MAGENTO_PATH}/magento-docker/etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ${MAGENTO_PATH}/magento-docker/etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=magento.test
      TIDEWAYS_APIKEY: ${TIDEWAYS_APIKEY}
    command: sh -c 'service ssh start; php-fpm -R'
    x-hints:
      - magento reinstall
      - magento sample_data
      - magento page_builder
      - docker-compose up --detach --force-recreate app
    x-setup:
      - bin/magento config:set web/seo/use_rewrites 1
      - bin/magento config:set dev/template/allow_symlink 1
      - bin/magento setup:performance:generate-fixtures ./setup/performance-toolkit/profiles/ce/small.xml
      - bin/magento deploy:mode:set production
      - composer dumpautoload -o
      - bin/magento cache:clean
    x-info: https://devdocs.magento.com/
  xhgui:
    image: duhon/xhgui
    hostname: xhgui
    depends_on:
      - mongodb
    ports:
      - "${XHGUI_PORT}:80"
  mongodb:
    image: mongo
    hostname: mongodb
    #    command: --storageEngine=inMemory #engine: mmapv1, rocksdb, wiredTiger, inMemory
    environment:
      - MONGO_INITDB_DATABASE=xhprof
    volumes:
      - ${MAGENTO_PATH}/magento-docker/etc/mongo:/docker-entrypoint-initdb.d
    ports:
      - "${MONGO_PORT}:27017"
  blackfire:
    image: blackfire/blackfire
    environment:
      BLACKFIRE_LOG_LEVEL: 1
      BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID}
      BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}
      BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID}
      BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN}
  tideways:
    image: duhon/tideways
    hostname: tideways
    environment:
      EXTRA_PARAMS: --debug
  newrelic:
    image: newrelic/php-daemon
  mail:
    image: mailhog/mailhog
    hostname: mail
    ports:
      - "${MAIL_PORT}:8025"
  mftf:
    image: selenium/standalone-chrome-debug:3.12.0
    ports:
      - "${MFTF_PORT}:5900"
    x-hints:
      - "vnc://localhost:5900 pass:secret"
      - magento prepare_tests
      - vendor/bin/mftf run:test
    x-info: https://devdocs.magento.com/mftf/docs/introduction.html
  elastic:
    image: elasticsearch:7.1.0
    hostname: elastic
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - cluster.name=magento-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - http.port=9200
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    x-hits:
      - curl -i http://localhost:9200/_cluster/health
    x-setup:
      - bin/magento config:set catalog/search/engine elasticsearch7
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/elasticsearch/es-overview.html
  redis:
    image: redis
    hostname: redis
    ports:
      - "${REDIS_PORT}:6379"
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    x-hints:
      - redis-cli monitor
      - telnet localhost 6379
    x-setup:
      #      - bin/magento setup:config:set -n --page-cache=redis --page-cache-redis-server=redis --cache-backend-redis-db=3
      - bin/magento setup:config:set -n --session-save=redis --session-save-redis-host=redis --cache-backend-redis-db=0
      - bin/magento setup:config:set -n --cache-backend=redis --cache-backend-redis-server=redis --cache-backend-redis-db=1
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/redis/config-redis.html
  rabbit:
    image: rabbitmq:management
    hostname: rabbitmq
    ports:
      - "${RABBIT_PORT}:15672"
    x-hints:
      - bin/magento queue:consumers:list
      - bin/magento queue:consumers:start
      - "http://localhost:15672/ user:guest pass:guest"
    x-setup:
      - bin/magento setup:config:set -n --amqp-host=rabbit --amqp-user=guest --amqp-password=guest
    x-info: https://devdocs.magento.com/guides/v2.3/config-guide/mq/manage-message-queues.html
  jmeter:
    image: duhon/jmeter:3.1
    user: '1000'
    environment:
      - DISPLAY
#    command: sh -c 'jmeter -Jhost=magento.test -Jbase_path=/ -Jfiles_folder=/var/www/magento2ce/setup/performance-toolkit/files/ -Djava.util.prefs.systemRoot=/tmp/ -Djava.util.prefs.userRoot=/tmp/ -j /dev/stdout'
    volumes:
      - ${MAGENTO_PATH}:/var/www
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
      - /etc/sudoers.d:/etc/sudoers.d:ro
networks:
  default:
    driver: bridge
