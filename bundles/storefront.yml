version: '3.7'
services:
  mutagen:
    build: ./build/mutagen
    init: true
    container_name: web-mutagen
    volumes:
      - code:/var/www
  # To work with GraphQL server
#  graphql:
#    image: node:12.14.1-buster-slim
#    command: sh -c 'npm ci && npm run build && ./bin/magento-graphql start '
#    tty: true
#    working_dir: /var/www/graphql
#    env_file:
#      - .env
#    volumes:
#      - code:/var/www
#    environment:
#      - MONOLITH_GRAPHQL_URL=http://magento.test/graphql
#      - LOG_FILE=/var/www/graphql/app.log
#      - ENABLE_CATALOG_STOREFRONT=true
#      - CATALOG_STOREFRONT_HOST=app
#      - CATALOG_STOREFRONT_PORT=9001
#    ports:
#      - 8008:8008
  web:
    image: nginx:alpine
    hostname: web
    volumes:
      - code:/var/www
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./etc/nginx/server.crt:/etc/nginx/server.crt
      - ./etc/nginx/server.key:/etc/nginx/server.key
      - ./etc/nginx/fetch_env.js:/etc/nginx/fetch_env.js
    networks:
      default:
        aliases:
          - magento.test
    ports:
      - "${WEB_PORT}:80"
      - "${WEBS_PORT}:443"
    depends_on:
      - app
    #    command: nginx-debug -g 'daemon off;'
    x-hint: uncomment the line above and change error_log in nginx.conf
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/nginx.html
  db:
    image: mysql:8
    hostname: db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "magento"
    shm_size: '2gb'
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./etc/mysql/my.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "${DB_PORT}:3306"
    cap_add:
      - SYS_NICE
    x-hits:
      - bin/magento dev:query-log:enable and watch var/debug/db.log
    x-info: https://devdocs.magento.com/guides/v2.3/install-gde/prereq/mysql.html
  # Message Broker container (magento/storefront-message-broker repo)
  app-message-broker:
    image: rkostiv/php-with-rr-grpc
    hostname: app-message-broker
    working_dir: /var/www/storefront-message-broker
    ports:
      - "223:22" #ssh
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/auth.json:/var/www/storefront-message-broker/auth.json:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=app-message-broker
    command: sh -c 'service ssh start; php-fpm -R'

  # Storefront Pricing app container (magento/storefront-pricing-ce repo)
  app-pricing:
    image: rkostiv/php-with-rr-grpc
    hostname: app-pricing
    working_dir: /var/www/storefront-pricing-ce
    ports:
      - "225:22" #ssh
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/auth.json:/var/www/storefront-pricing-ce/auth.json:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=app-pricing
    command: sh -c 'service ssh start; php-fpm -R'

  # Storefront Search app container (magento/storefront-search-ce repo)
  app-search:
    image: rkostiv/php-with-rr-grpc
    hostname: app-search
    working_dir: /var/www/storefront-search-ce
    ports:
      - "226:22" #ssh
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/auth.json:/var/www/storefront-search-ce/auth.json:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=app-search
    command: sh -c 'service ssh start; php-fpm -R'

  # Storefront Product Review app container (magento/storefront-product-reviews-ce repo)
  app-product-reviews:
    image: rkostiv/php-with-rr-grpc
    hostname: app-product-reviews
    working_dir: /var/www/storefront-product-reviews-ce
    ports:
      - "227:22" #ssh
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/auth.json:/var/www/storefront-product-reviews-ce/auth.json:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=app-product-reviews
    command: sh -c 'service ssh start; php-fpm -R'

  # Catalog Storefront app container (magento/catalog-storefront-ce repo)
  app-catalog-storefront:
    image: rkostiv/php-with-rr-grpc
    hostname: app-catalog-storefront
    working_dir: /var/www/catalog-storefront
    ports:
      - "228:22" #ssh
      - "9002:9001" # grpc
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/auth.json:/var/www/catalog-storefront/auth.json:ro
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=app-catalog-storefront
    command: sh -c 'service ssh start; php-fpm -R'

  # Magento 2 container with commerce-data-export repo
  app:
    image: rkostiv/php-with-rr-grpc
    # to re-build image with gRPC use the following docker file:
#    build:
#      context: .
#      dockerfile: build/php/fpm-grpc
    hostname: app
    ports:
      - "${SSH_PORT}:22"
      - "9001:9001"
    depends_on:
      - elastic
      - db
    stop_signal: SIGKILL
    env_file:
      - .env
    volumes:
      - code:/var/www
      - ./etc/php/storefront-env.php:/tmp/storefront-env.php
      - ./etc/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./etc/php/tools:/usr/local/bin/magento2:ro
      #      - ./etc/php/tideways.ini:/usr/local/etc/php/conf.d/tideways.ini
      #      - ./etc/php/profiler.php:/usr/local/lib/php/header.php
      #      - ./etc/php/append.ini:/usr/local/etc/php/conf.d/append.ini
      - ./etc/php/php.ini:/usr/local/etc/php/php.ini:ro
      - ./etc/php/php-fpm.conf:/usr/local/etc/php-fpm.conf
      #      - ./etc/php/tests/functional/phpunit.xml:/var/www/magento2ce/dev/tests/functional/phpunit.xml:rw
      #      - ./etc/php/tests/functional/config.xml:/var/www/magento2ce/dev/tests/functional/etc/config.xml:rw
      #      - ./etc/php/tests/acceptance/.env:/var/www/magento2ce/dev/tests/acceptance/.env:rw
      - ./etc/php/tests/integration/install-config-mysql.php:/var/www/magento2ce/dev/tests/integration/etc/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/install-config-mysql.php:/var/www/magento2ce/dev/tests/api-functional/config/install-config-mysql.php:rw
      - ./etc/php/tests/api-functional/phpunit_rest.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_rest.xml:rw
      - ./etc/php/tests/api-functional/phpunit_graphql.xml:/var/www/magento2ce/dev/tests/api-functional/phpunit_graphql.xml:rw
    environment:
      COMPOSER_HOME: /var/www/.composer
      PHP_IDE_CONFIG: serverName=magento.test
    command: sh -c 'service ssh start; php-fpm -R'
  elastic:
    image: elasticsearch:$ELASTICSEARCH_IMAGE_VERSION
    hostname: elastic
    ports:
      - "${ELASTIC_PORT}:9200"
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  redis:
    image: redis
    hostname: redis
    ports:
      - "${REDIS_PORT}:6379"
    sysctls:
      net.core.somaxconn: 1024
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
  rabbit:
    image: rabbitmq:management
    hostname: rabbitmq
    ports:
      - "${RABBIT_PORT}:15672"
#  mail:
#    image: mailhog/mailhog
#    hostname: mail
#    ports:
#      - "1025:1025"
#      - "8025:8025"
# Uncomment after gRPC server executed.
#  grpcui:
#    image: wongnai/grpcui
#    ports:
#      - "8080:8080"
#    volumes:
#      - code:/var/www
#    entrypoint: ["grpcui", "-plaintext", "-proto", "magento.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app:9001"]
#  grpcui-pricing:
#    image: wongnai/grpcui
#    ports:
#      - "8082:8080"
#    volumes:
#      - ${MAGENTO_PATH}/storefront-pricing-ce:/var/www/magento2ce
#    entrypoint: ["grpcui", "-plaintext", "-proto", "pricing.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app-pricing:9001"]
#  grpcui-search:
#    image: wongnai/grpcui
#    ports:
#      - "8083:8080"
#    volumes:
#      - ${MAGENTO_PATH}/storefront-search-ce:/var/www/magento2ce
#    entrypoint: ["grpcui", "-plaintext", "-proto", "search.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app-search:9001"]
#  grpcui-product-reviews:
#    image: wongnai/grpcui
#    ports:
#      - "8084:8080"
#    volumes:
#      - ${MAGENTO_PATH}/storefront-product-reviews-ce:/var/www/magento2ce
#    entrypoint: ["grpcui", "-plaintext", "-proto", "reviews.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app-product-reviews:9001"]
#  grpcui-catalog-storefront:
#    image: wongnai/grpcui
#    ports:
#      - "8085:8080"
#    volumes:
#      - ${MAGENTO_PATH}/catalog-storefront:/var/www/magento2ce
#    entrypoint: ["grpcui", "-plaintext", "-proto", "magento.proto", "-port", "8080", "-bind", "0.0.0.0", "-import-path", "/var/www/magento2ce", "app-catalog-storefront:9001"]

networks:
  default:
    driver: bridge
volumes:
  code:
